name: "Build / Lint / Tests"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "**" ]

env:
  golang-version: 1.20.2
  golangci-lint-version: v1.51.2
  docker-registry: ghcr.io
  docker-image-name: ${{ github.repository }}

defaults:
  run:
    shell: bash --noprofile --norc -eo pipefail {0}

jobs:
  build:
    runs-on: ubuntu-latest
    name: "Building, Linting, Formatting"

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.golang-version }}
      id: go

    - name: Lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: ${{ env.golangci-lint-version }}

    - name: Format
      run: |
        make fmt
        git diff --exit-code .

    - name: Build
      run: make build

  test:
    strategy:
      fail-fast: false
      matrix:
        pg_version: [13, 14, 15]

    name: Tests (Unit / PG) - PG ${{ matrix.pg_version }}
    runs-on: self-hosted
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        cache: false
        go-version: ${{ env.golang-version }}
      id: go

    - name: Test
      run: TSES_TEST_PG_VERSION=${{ matrix.pg_version }} make test

  integration-test:
    strategy:
      fail-fast: false
      matrix:
        test: ["aws-kinesis", "aws-sqs", "kafka", "nats", "redis", "redpanda"]

    name: Tests (Int)
    runs-on: ubuntu-latest
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        cache: false
        go-version: ${{ env.golang-version }}
      id: go

    - name: Test
      run: TSES_TEST_PG_VERSION=15 make integration-test-${{ matrix.test }}
